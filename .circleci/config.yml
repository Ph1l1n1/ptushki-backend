version: 2

defaults: &defaults
  working_directory: ~/Shutya
  docker:
    - image: circleci/node:11

jobs:
  save_cache:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "package-lock.json" }}
            - dependency-cache-
      - run:
          name: install-dependencies
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - .cache/npm
            - node_modules
  test:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "package-lock.json" }}
            - dependency-cache-
      - run:
          name: install-dependencies
          command: npm install
      - run:
          name: run-unit-tests
          command: npm run test
  lint:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "package-lock.json" }}
            - dependency-cache-
      - run:
          name: install-dependencies
          command: npm install
      - run:
          name: linting
          command: npm run lint
  deploy:
    <<: *defaults
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - '41:c6:bf:6b:ce:39:15:9e:29:e3:21:8d:23:47:55:9a'
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build and push Docker image
          command: |
            npm install
            docker build -t ptushki-api .
            docker tag ptushki-api:latest $PTUSHKI_REGISTRY/ptushki-api:latest
            docker login $PTUSHKI_REGISTRY -u $PTUSHKI_REGISTRY_USERNAME -p $PTUSHKI_REGISTRY_PASSWORD
            docker push $PTUSHKI_REGISTRY/ptushki-api:latest
            ssh -o StrictHostKeyChecking=no ptushki@ptushki.westeurope.cloudapp.azure.com "docker-compose pull;docker-compose down;docker-compose up -d"
workflows:
  version: 2
  deploy:
    jobs:
      - lint
      - test
      - deploy:
          requires:
            - test
            - lint
          filters:
            branches:
              only:
                - master
